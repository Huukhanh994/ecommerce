version: v1.0
name: Test MyApp
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: install dependencies
    task:
      jobs:
        - name: composer
          commands:
            - checkout
            - cache restore
            - composer install
            - composer ins
            - composer up
            - 'php artisan dusk:install'
            - npm install
            - 'export "PATH=./vendor/bin:${PATH}"'
            - cache store
      env_vars:
        - name: APP_ENV
          value: local
    dependencies: []
  - name: Run Code Analysis
    task:
      prologue:
        commands:
          - checkout
          - cache restore
      jobs:
        - name: phpcpd
          commands:
            - 'curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar'
            - php phpcpd.phar app/ --min-lines=50
    dependencies:
      - install dependencies
  - name: Run Unit tests
    task:
      jobs:
        - name: phpunit
          commands:
            - checkout
            - cp .env.example .env
            - touch database/database.sqlite
            - cache restore
            - 'php artisan key:generate'
            - start mysql
            - ./vendor/bin/phpunit
      env_vars:
        - name: DB_CONNECTION
          value: sqlite
        - name: DB_HOST
          value: 127.0.0.1
        - name: DB_PORT
          value: '3306'
        - name: DB_DATABASE
          value: ecommerce
        - name: DB_USERNAME
          value: root
        - name: DB_PASSWORD
          value: ''
    dependencies:
      - Run Code Analysis
  - name: Run Browser tests
    task:
      jobs:
        - name: laravel dusk
          commands:
            - checkout
            - cp .env.example .env
            - touch database/database.sqlite
            - cache restore
            - 'php artisan key:generate'
            - 'php artisan dusk:update --detect'
            - php artisan serve --env=dusk.local --port=8010 &
            - php artisan dusk
    dependencies:
      - Run Unit tests
  - name: Run Security Tests
    task:
      jobs:
        - name: sensiolabs
          commands:
            - checkout
            - 'git clone https://github.com/sensiolabs/security-checker.git'
            - cd security-checker
            - composer install
            - 'php security-checker security:check ../composer.lock'
    dependencies:
      - Run Browser tests
